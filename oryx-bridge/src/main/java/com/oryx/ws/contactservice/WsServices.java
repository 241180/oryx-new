package com.oryx.ws.contactservice;

import javax.xml.namespace.QName;
import javax.xml.ws.*;
import java.net.MalformedURLException;
import java.net.URL;


/**
 * This class was generated by the JAX-WS RI.
 * JAX-WS RI 2.2.10
 * Generated source version: 2.2
 */
@WebServiceClient(name = "WsServices", targetNamespace = "http://com/oryx/ws/contactservice", wsdlLocation = "http://localhost:8680/oryx-server/WsService.wsdl")
public class WsServices
        extends Service {

    private final static URL WSSERVICES_WSDL_LOCATION;
    private final static WebServiceException WSSERVICES_EXCEPTION;
    private final static QName WSSERVICES_QNAME = new QName("http://com/oryx/ws/contactservice", "WsServices");

    static {
        URL url = null;
        WebServiceException e = null;
        try {
            url = new URL("http://localhost:8680/oryx-server/WsService.wsdl");
        } catch (MalformedURLException ex) {
            e = new WebServiceException(ex);
        }
        WSSERVICES_WSDL_LOCATION = url;
        WSSERVICES_EXCEPTION = e;
    }

    public WsServices() {
        super(__getWsdlLocation(), WSSERVICES_QNAME);
    }

    public WsServices(WebServiceFeature... features) {
        super(__getWsdlLocation(), WSSERVICES_QNAME, features);
    }

    public WsServices(URL wsdlLocation) {
        super(wsdlLocation, WSSERVICES_QNAME);
    }

    public WsServices(URL wsdlLocation, WebServiceFeature... features) {
        super(wsdlLocation, WSSERVICES_QNAME, features);
    }

    public WsServices(URL wsdlLocation, QName serviceName) {
        super(wsdlLocation, serviceName);
    }

    public WsServices(URL wsdlLocation, QName serviceName, WebServiceFeature... features) {
        super(wsdlLocation, serviceName, features);
    }

    private static URL __getWsdlLocation() {
        if (WSSERVICES_EXCEPTION != null) {
            throw WSSERVICES_EXCEPTION;
        }
        return WSSERVICES_WSDL_LOCATION;
    }

    /**
     * @return returns WsService
     */
    @WebEndpoint(name = "WsServiceSoap11")
    public WsService getWsServiceSoap11() {
        return super.getPort(new QName("http://com/oryx/ws/contactservice", "WsServiceSoap11"), WsService.class);
    }

    /**
     * @param features A list of {@link javax.xml.ws.WebServiceFeature} to configure on the proxy.  Supported features not in the <code>features</code> parameter will have their default values.
     * @return returns WsService
     */
    @WebEndpoint(name = "WsServiceSoap11")
    public WsService getWsServiceSoap11(WebServiceFeature... features) {
        return super.getPort(new QName("http://com/oryx/ws/contactservice", "WsServiceSoap11"), WsService.class, features);
    }

}
